<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="17" passed="13" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-28T11:50:29 PDT" name="Suite" finished-at="2025-04-28T11:57:52 PDT" duration-ms="442528">
    <groups>
    </groups>
    <test started-at="2025-04-28T11:50:29 PDT" name="Test" finished-at="2025-04-28T11:57:52 PDT" duration-ms="442528">
      <class name="com.Automation.Tests.LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:50:29 PDT" name="setup" finished-at="2025-04-28T11:50:29 PDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:50:29 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:50:34 PDT" duration-ms="4678" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="forgotPasswordTest()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:50:34 PDT" name="forgotPasswordTest" finished-at="2025-04-28T11:50:40 PDT" duration-ms="6384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:50:40 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:50:43 PDT" duration-ms="3109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:50:44 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:50:47 PDT" duration-ms="3495" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="invalidLoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:50:47 PDT" name="invalidLoginTest" data-provider="invalidLoginData" finished-at="2025-04-28T11:50:58 PDT" duration-ms="10828" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amirtha.c.panneer126@agentforce.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:50:58 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:51:01 PDT" duration-ms="3120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:51:01 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:51:05 PDT" duration-ms="3526" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="invalidLoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:51:05 PDT" name="invalidLoginTest" data-provider="invalidLoginData" finished-at="2025-04-28T11:51:21 PDT" duration-ms="16577" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amirtha.c.panneer@agentforce.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[asdfg]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:51:21 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:51:24 PDT" duration-ms="3118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:51:24 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:51:28 PDT" duration-ms="3568" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="invalidLoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:51:28 PDT" name="invalidLoginTest" data-provider="invalidLoginData" finished-at="2025-04-28T11:51:38 PDT" duration-ms="9741" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amirtha.c.panneer126@agentforce.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[amirthajava]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:51:38 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:51:41 PDT" duration-ms="3123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:51:41 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:51:44 PDT" duration-ms="3509" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="invalidLoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:51:44 PDT" name="invalidLoginTest" data-provider="invalidLoginData" finished-at="2025-04-28T11:52:01 PDT" duration-ms="16880" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amirtha.c.126@agentforce.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[amirthajava123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:52:01 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:52:04 PDT" duration-ms="3129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:52:04 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:52:08 PDT" duration-ms="3461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="invalidLoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:52:08 PDT" name="invalidLoginTest" data-provider="invalidLoginData" finished-at="2025-04-28T11:52:24 PDT" duration-ms="16255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amirtha.panneer126@agentforce.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[amirthajava123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:52:24 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:52:27 PDT" duration-ms="3113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:52:27 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:52:31 PDT" duration-ms="3636" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="invalidLoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:52:31 PDT" name="invalidLoginTest" data-provider="invalidLoginData" finished-at="2025-04-28T11:52:47 PDT" duration-ms="16468" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[c.panneer126@agentforce.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[amirthajava123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:52:47 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:52:50 PDT" duration-ms="3119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:52:50 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:52:54 PDT" duration-ms="3963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="invalidLoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:52:54 PDT" name="invalidLoginTest" data-provider="invalidLoginData" finished-at="2025-04-28T11:53:04 PDT" duration-ms="9527" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amirtha.c.panneer126@agentforce]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[amirthajava123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:53:04 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:53:07 PDT" duration-ms="3118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:53:07 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:53:11 PDT" duration-ms="4388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="invalidLoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:53:11 PDT" name="invalidLoginTest" data-provider="invalidLoginData" finished-at="2025-04-28T11:53:22 PDT" duration-ms="10948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amirtha.c.panneer126@agentforce.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fghj]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:53:22 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:53:25 PDT" duration-ms="3116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:53:25 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:53:29 PDT" duration-ms="3473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="invalidLoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:53:29 PDT" name="invalidLoginTest" data-provider="invalidLoginData" finished-at="2025-04-28T11:53:45 PDT" duration-ms="16585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amirtha@agentforce.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[amirthajava123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:53:45 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:53:49 PDT" duration-ms="3115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:53:49 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:53:52 PDT" duration-ms="3436" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="logoutTest()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:53:52 PDT" name="logoutTest" finished-at="2025-04-28T11:54:06 PDT" duration-ms="13848" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at com.Automation.Tests.LoginTest.logoutTest(LoginTest.java:118)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:54:06 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:54:09 PDT" duration-ms="3122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:54:09 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:54:13 PDT" duration-ms="3436" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="rememberMeTest()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:54:13 PDT" name="rememberMeTest" finished-at="2025-04-28T11:54:23 PDT" duration-ms="10199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rememberMeTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:54:23 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:54:26 PDT" duration-ms="3126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:54:26 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:54:29 PDT" duration-ms="3365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="validLoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:54:29 PDT" name="validLoginTest" data-provider="validLoginData" finished-at="2025-04-28T11:54:41 PDT" duration-ms="11172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amirtha.c.panneer126@agentforce.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[amirthajava123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[y]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:54:41 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:54:44 PDT" duration-ms="3118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Automation.Tests.LoginTest@38f116f6]" started-at="2025-04-28T11:57:52 PDT" name="tearDown" finished-at="2025-04-28T11:57:52 PDT" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.Automation.Tests.LoginTest -->
      <class name="com.Automation.Tests.UserMenuDropDownTest">
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.UserMenuDropDownTest@5c530d1e]" started-at="2025-04-28T11:54:44 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:54:47 PDT" duration-ms="3450" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="developerConsoleTest()[pri:0, instance:com.Automation.Tests.UserMenuDropDownTest@5c530d1e]" started-at="2025-04-28T11:54:47 PDT" name="developerConsoleTest" finished-at="2025-04-28T11:54:56 PDT" duration-ms="9037" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Login failed or not on Landed on Home Page expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Login failed or not on Landed on Home Page expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.Automation.Base.BaseTest.performValidLogin(BaseTest.java:135)
at com.Automation.Tests.UserMenuDropDownTest.developerConsoleTest(UserMenuDropDownTest.java:132)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- developerConsoleTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.UserMenuDropDownTest@5c530d1e]" started-at="2025-04-28T11:54:57 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:55:01 PDT" duration-ms="3115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.UserMenuDropDownTest@5c530d1e]" started-at="2025-04-28T11:55:01 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:55:04 PDT" duration-ms="3780" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="myProfileTest()[pri:0, instance:com.Automation.Tests.UserMenuDropDownTest@5c530d1e]" started-at="2025-04-28T11:55:04 PDT" name="myProfileTest" finished-at="2025-04-28T11:56:55 PDT" duration-ms="110843" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for frame to be available: Proxy element for: DefaultElementLocator 'By.id: contactInfoContentId' (tried for 60 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for frame to be available: Proxy element for: DefaultElementLocator 'By.id: contactInfoContentId' (tried for 60 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.Automation.Pages.Base.BasePage.waitForIframe(BasePage.java:296)
at com.Automation.Pages.MyProfilePage.profileEditContactIframe(MyProfilePage.java:134)
at com.Automation.Tests.UserMenuDropDownTest.myProfileTest(UserMenuDropDownTest.java:54)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#contactInfoContentId"}
  (Session info: chrome=135.0.7049.115)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Muras-MB-Pro.local', ip: '2601:646:8981:c560:2da8:2076:2d1f:2e3e%en0', os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '15.4', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 135.0.7049.115, chrome: {chromedriverVersion: 135.0.7049.114 (63fd8a7d9d0..., userDataDir: /var/folders/1c/cj98x4bx77s...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:54276}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 222a3540703740870d4bc37e8d3a29f2
*** Element info: {Using=id, value=contactInfoContentId}
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy32.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:50)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.frame(RemoteWebDriver.java:891)
at org.openqa.selenium.support.ui.ExpectedConditions$19.apply(ExpectedConditions.java:553)
at org.openqa.selenium.support.ui.ExpectedConditions$19.apply(ExpectedConditions.java:549)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 23 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myProfileTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.UserMenuDropDownTest@5c530d1e]" started-at="2025-04-28T11:56:55 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:56:59 PDT" duration-ms="3178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.UserMenuDropDownTest@5c530d1e]" started-at="2025-04-28T11:56:59 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:57:02 PDT" duration-ms="3707" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="mySettingsTest()[pri:0, instance:com.Automation.Tests.UserMenuDropDownTest@5c530d1e]" started-at="2025-04-28T11:57:02 PDT" name="mySettingsTest" finished-at="2025-04-28T11:57:26 PDT" duration-ms="23245" status="FAIL">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
at org.testng.AssertJUnit.fail(AssertJUnit.java:65)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:23)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:33)
at com.Automation.Tests.UserMenuDropDownTest.mySettingsTest(UserMenuDropDownTest.java:87)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mySettingsTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.UserMenuDropDownTest@5c530d1e]" started-at="2025-04-28T11:57:26 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:57:29 PDT" duration-ms="3120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method is-config="true" signature="setUpBeforeMethod(java.lang.String)[pri:0, instance:com.Automation.Tests.UserMenuDropDownTest@5c530d1e]" started-at="2025-04-28T11:57:29 PDT" name="setUpBeforeMethod" finished-at="2025-04-28T11:57:33 PDT" duration-ms="3534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method signature="userMenuTest()[pri:0, instance:com.Automation.Tests.UserMenuDropDownTest@5c530d1e]" started-at="2025-04-28T11:57:33 PDT" name="userMenuTest" finished-at="2025-04-28T11:57:49 PDT" duration-ms="16079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userMenuTest -->
        <test-method is-config="true" signature="tearDownAfterMethod()[pri:0, instance:com.Automation.Tests.UserMenuDropDownTest@5c530d1e]" started-at="2025-04-28T11:57:49 PDT" name="tearDownAfterMethod" finished-at="2025-04-28T11:57:52 PDT" duration-ms="3123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
      </class> <!-- com.Automation.Tests.UserMenuDropDownTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
